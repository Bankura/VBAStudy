VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "ScriptingExTextStream"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

'*/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'*
'* [機能名] Scripting.TextStreamクラスのラップ・拡張クラス
'* [詳  細] Scripting.TextStreamクラスのWrapperとしての機能を提供する他、
'*          Scripting.TextStreamクラスを使用したユーティリティを提供する。
'*
'* @author Bankura
'* Copyright (c) 2019 Bankura
'*/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

'------------------------------------------------------------------------------
' [補  足]
' Scripting.TextStreamクラスについて。
' <https://docs.microsoft.com/ja-jp/office/vba/language/reference/user-interface-help/drive-object>
' 特定のディスク ドライブまたはネットワーク共有のプロパティにアクセスできます。
'
'------------------------------------------------------------------------------

'******************************************************************************
'* 内部変数定義
'******************************************************************************
'Private mOrigin As Scripting.TextStream
Private mOrigin As Object

'******************************************************************************
'* プロパティ定義
'******************************************************************************
'*-----------------------------------------------------------------------------
'* オリジナルObject プロパティ
'*-----------------------------------------------------------------------------
Property Get Origin() As Object
    Set Origin = mOrigin
End Property
Property Set Origin(arg As Object)
    'If Not mOrigin Is Nothing Then
    '    mOrigin.Close
    'End If
    Set mOrigin = arg
End Property

'*-----------------------------------------------------------------------------
'* AtEndOfLine プロパティ（読み取り専用）
'*
'* [補  足]
'* ・現在の位置は行の末尾かどうかを示します。
'*-----------------------------------------------------------------------------
Property Get AtEndOfLine() As Boolean
    AtEndOfLine = mOrigin.AtEndOfLine
End Property

'*-----------------------------------------------------------------------------
'* AtEndOfStream プロパティ（読み取り専用）
'*
'* [補  足]
'* ・現在の位置はストリームの最後かどうかを示します。
'*-----------------------------------------------------------------------------
Property Get AtEndOfStream() As Boolean
    AtEndOfStream = mOrigin.AtEndOfStream
End Property

'*-----------------------------------------------------------------------------
'* Column プロパティ（読み取り専用）
'*
'* [補  足]
'* ・現在の桁数。
'*-----------------------------------------------------------------------------
Property Get Column() As Long
    Column = mOrigin.Column
End Property

'*-----------------------------------------------------------------------------
'* Line プロパティ（読み取り専用）
'*
'* [補  足]
'* ・現在の行番号。
'*-----------------------------------------------------------------------------
Property Get Line() As Long
    Line = mOrigin.Line
End Property

'******************************************************************************
'* コンストラクタ・デストラクタ
'******************************************************************************
Private Sub Class_Initialize()
    'Set mOrigin = CreateObject("Scripting.TextStream")
End Sub
Private Sub Class_Terminate()
    'If Not mOrigin Is Nothing Then
    '    mOrigin.Close
    'End If
    Set mOrigin = Nothing
End Sub
 
'******************************************************************************
'* メソッド定義
'******************************************************************************

'******************************************************************************
'* [概  要] CloseStreamメソッド
'* [詳  細] Closeのラッパーメソッド。
'*          テキスト ストリームを閉じる。
'******************************************************************************
Sub CloseStream()
    Call mOrigin.Close
End Sub

'******************************************************************************
'* [概  要] Readメソッド
'* [詳  細] Readのラッパーメソッド。
'*          指定した数の文字を文字列に読み込みます。
'*
'* @param Characters
'* @return  指定した数の文字
'******************************************************************************
Function Read(Characters As Long) As String
    Read = mOrigin.Read(Characters)
End Function

'******************************************************************************
'* [概  要] ReadAllメソッド
'* [詳  細] ReadAllのラッパーメソッド。
'*          ストリーム全体を文字列に読み込みます。
'*
'* @return ストリーム全体の文字列
'******************************************************************************
Function ReadAll() As String
    ReadAll = mOrigin.ReadAll()
End Function

'******************************************************************************
'* [概  要] ReadLineメソッド
'* [詳  細] ReadLineのラッパーメソッド。
'*          行全体を文字列に読み込みます。
'*
'* @return 行全体の文字列
'******************************************************************************
Function ReadLine() As String
    ReadLine = mOrigin.ReadLine()
End Function

'******************************************************************************
'* [概  要] Skipメソッド
'* [詳  細] Skipのラッパーメソッド。
'*          指定した文字数をスキップします｡
'*
'* @param Characters 文字数
'******************************************************************************
Sub Skip(Characters As Long)
    Call mOrigin.Skip(Characters)
End Sub

'******************************************************************************
'* [概  要] SkipLineメソッド
'* [詳  細] SkipLineのラッパーメソッド。
'*          行をスキップします。
'*
'******************************************************************************
Sub SkipLine()
    Call mOrigin.SkipLine
End Sub

'******************************************************************************
'* [概  要] WriteTextメソッド
'* [詳  細] Writeのラッパーメソッド。
'*          ストリームに文字列を書き込みます。
'*
'* @param Text 書き込むテキスト
'******************************************************************************
Sub WriteText(text As String)
    Call mOrigin.Write(text)
End Sub

'******************************************************************************
'* [概  要] WriteBlankLinesメソッド
'* [詳  細] WriteBlankLinesのラッパーメソッド。
'*          ストリームに複数行の空白行を書き込みます。
'*
'* @param Lines 空白行数
'******************************************************************************
Sub WriteBlankLines(Lines As Long)
    Call mOrigin.WriteBlankLines(Lines)
End Sub

'******************************************************************************
'* [概  要] WriteLineメソッド
'* [詳  細] WriteLineのラッパーメソッド。
'*          ストリームに文字列と行末コードを書き込みます。
'*
'* @param Text 省略可能。書き込むテキスト。
'******************************************************************************
Sub WriteLine(Optional text As String)
    If IsMissing(text) Then
        Call mOrigin.WriteLine
    Else
        Call mOrigin.WriteLine(text)
    End If
End Sub

'*-----------------------------------------------------------------------------
'* 拡張メソッド
'*-----------------------------------------------------------------------------

